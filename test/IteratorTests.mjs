// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Test from "./Test.mjs";
import * as Caml_obj from "rescript/lib/es6/caml_obj.js";
import * as Core__Iterator from "../src/Core__Iterator.mjs";
import * as Core__AsyncIterator from "../src/Core__AsyncIterator.mjs";

var eq = Caml_obj.equal;

var iterator = ((() => {
    var array1 = ['a', 'b', 'c'];
    var iterator1 = array1[Symbol.iterator]();
    return iterator1
  })());

var syncResult = {
  contents: undefined
};

Core__Iterator.forEach(iterator, (function (v) {
        if (v === "b") {
          syncResult.contents = "b";
          return ;
        }
        
      }));

Test.run([
      [
        "IteratorTests.res",
        21,
        20,
        34
      ],
      "Sync forEach"
    ], syncResult.contents, eq, "b");

var asyncIterator = ((() => {
    var map1 = new Map();

    map1.set('first', '1');
    map1.set('second', '2');

    var iterator1 = map1[Symbol.iterator]();
    return iterator1;
  })());

var asyncResult = {
  contents: undefined
};

await Core__AsyncIterator.forEach(asyncIterator, (function (v) {
        if (v !== undefined && v[0] === "second") {
          asyncResult.contents = "second";
          return ;
        }
        
      }));

Test.run([
      [
        "IteratorTests.res",
        44,
        20,
        35
      ],
      "Async forEach"
    ], asyncResult.contents, eq, "second");

export {
  eq ,
  iterator ,
  syncResult ,
  asyncIterator ,
  asyncResult ,
}
/* iterator Not a pure module */
