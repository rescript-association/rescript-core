// Generated by ReScript, PLEASE EDIT WITH CARE

import * as IntTests from "./IntTests.mjs";
import * as TestTests from "./TestTests.mjs";
import * as ArrayTests from "./ArrayTests.mjs";
import * as ErrorTests from "./ErrorTests.mjs";
import * as PromiseTest from "./PromiseTest.mjs";
import * as ResultTests from "./ResultTests.mjs";
import * as NullableTests from "./NullableTests.mjs";
import * as TypedArrayTests from "./TypedArrayTests.mjs";

var bign = TestTests.bign;

var TestError = PromiseTest.TestError;

var fail = PromiseTest.fail;

var equal = PromiseTest.equal;

var Creation = PromiseTest.Creation;

var ThenChaining = PromiseTest.ThenChaining;

var Rejection = PromiseTest.Rejection;

var Catching = PromiseTest.Catching;

var Concurrently = PromiseTest.Concurrently;

var panicTest = ErrorTests.panicTest;

var $$catch = IntTests.$$catch;

var forEachIfOkCallFunction = ResultTests.forEachIfOkCallFunction;

var forEachIfErrorDoNotCallFunction = ResultTests.forEachIfErrorDoNotCallFunction;

var num1 = TypedArrayTests.num1;

var num2 = TypedArrayTests.num2;

var num3 = TypedArrayTests.num3;

var assertTrue = TypedArrayTests.assertTrue;

var assertWillThrow = TypedArrayTests.assertWillThrow;

var areSame = TypedArrayTests.areSame;

var o = TypedArrayTests.o;

var eq = NullableTests.eq;

export {
  bign ,
  TestError ,
  fail ,
  equal ,
  Creation ,
  ThenChaining ,
  Rejection ,
  Catching ,
  Concurrently ,
  panicTest ,
  $$catch ,
  forEachIfOkCallFunction ,
  forEachIfErrorDoNotCallFunction ,
  num1 ,
  num2 ,
  num3 ,
  assertTrue ,
  assertWillThrow ,
  areSame ,
  o ,
  eq ,
}
/* IntTests Not a pure module */
