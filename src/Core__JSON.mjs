// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Caml_option from "rescript/lib/es6/caml_option.js";

function classify(value) {
  var match = Object.prototype.toString.call(value);
  switch (match) {
    case "[object Array]" :
        return {
                TAG: /* Array */4,
                _0: value
              };
    case "[object Boolean]" :
        return {
                TAG: /* Bool */0,
                _0: value
              };
    case "[object Null]" :
        return /* Null */0;
    case "[object Number]" :
        return {
                TAG: /* Number */2,
                _0: value
              };
    case "[object String]" :
        return {
                TAG: /* String */1,
                _0: value
              };
    default:
      return {
              TAG: /* Object */3,
              _0: value
            };
  }
}

var Classify = {
  classify: classify
};

var Encode = {};

function bool(json) {
  if (typeof json === "boolean") {
    return json;
  }
  
}

function $$null(json) {
  if (json === null) {
    return null;
  }
  
}

function string(json) {
  if (typeof json === "string") {
    return json;
  }
  
}

function $$float(json) {
  if (typeof json === "number") {
    return json;
  }
  
}

function object(json) {
  if (typeof json === "object" && !Array.isArray(json) && json !== null) {
    return Caml_option.some(json);
  }
  
}

function array(json) {
  if (Array.isArray(json)) {
    return json;
  }
  
}

var Decode = {
  bool: bool,
  $$null: $$null,
  string: string,
  $$float: $$float,
  object: object,
  array: array
};

export {
  Classify ,
  Encode ,
  Decode ,
}
/* No side effect */
