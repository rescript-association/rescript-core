// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";

function getExn(x) {
  if (x.TAG === /* Ok */0) {
    return x._0;
  }
  throw {
        RE_EXN_ID: "Not_found",
        Error: new Error()
      };
}

function mapWithDefault(opt, $$default, f) {
  var f$1 = Curry.__1(f);
  if (opt.TAG === /* Ok */0) {
    return f$1(opt._0);
  } else {
    return $$default;
  }
}

function map(opt, f) {
  var f$1 = Curry.__1(f);
  if (opt.TAG === /* Ok */0) {
    return {
            TAG: /* Ok */0,
            _0: f$1(opt._0)
          };
  } else {
    return {
            TAG: /* Error */1,
            _0: opt._0
          };
  }
}

function flatMap(opt, f) {
  var f$1 = Curry.__1(f);
  if (opt.TAG === /* Ok */0) {
    return f$1(opt._0);
  } else {
    return {
            TAG: /* Error */1,
            _0: opt._0
          };
  }
}

function getWithDefault(opt, $$default) {
  if (opt.TAG === /* Ok */0) {
    return opt._0;
  } else {
    return $$default;
  }
}

function isOk(x) {
  if (x.TAG === /* Ok */0) {
    return true;
  } else {
    return false;
  }
}

function isError(x) {
  if (x.TAG === /* Ok */0) {
    return false;
  } else {
    return true;
  }
}

function eq(a, b, f) {
  var f$1 = Curry.__2(f);
  if (a.TAG === /* Ok */0) {
    if (b.TAG === /* Ok */0) {
      return f$1(a._0, b._0);
    } else {
      return false;
    }
  } else if (b.TAG === /* Ok */0) {
    return false;
  } else {
    return true;
  }
}

function cmp(a, b, f) {
  var f$1 = Curry.__2(f);
  if (a.TAG === /* Ok */0) {
    if (b.TAG === /* Ok */0) {
      return f$1(a._0, b._0);
    } else {
      return 1;
    }
  } else if (b.TAG === /* Ok */0) {
    return -1;
  } else {
    return 0;
  }
}

function fromArrayMap(xs, f) {
  var oks = [];
  var firstError;
  var index = 0;
  var $$break = false;
  while(!$$break) {
    var x = xs.at(index);
    if (x !== undefined) {
      var ok = Curry._1(f, Caml_option.valFromOption(x));
      if (ok.TAG === /* Ok */0) {
        oks.push(ok._0);
        index = index + 1 | 0;
      } else {
        firstError = ok;
        $$break = true;
      }
    } else {
      $$break = true;
    }
  };
  var err = firstError;
  if (err !== undefined) {
    return err;
  } else {
    return {
            TAG: /* Ok */0,
            _0: oks
          };
  }
}

function fromArray(xs) {
  return fromArrayMap(xs, (function (i) {
                return i;
              }));
}

export {
  getExn ,
  mapWithDefault ,
  map ,
  flatMap ,
  getWithDefault ,
  isOk ,
  isError ,
  eq ,
  cmp ,
  fromArray ,
  fromArrayMap ,
}
/* No side effect */
